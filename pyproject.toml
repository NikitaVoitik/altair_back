[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.10,<4.0"
dependencies = [
    "alembic==1.16.2",
    "annotated-types==0.7.0",
    "anyio==4.9.0",
    "app>=0.0.1",
    "bcrypt==4.0.1",
    "cachetools==6.1.0",
    "certifi==2025.6.15",
    "chardet==5.2.0",
    "charset-normalizer==3.4.2",
    "click==8.2.1",
    "cssselect==1.3.0",
    "cssutils==2.11.1",
    "distro==1.9.0",
    "dnspython==2.7.0",
    "email-validator==2.2.0",
    "emails==0.6",
    "fastapi==0.115.13",
    "fastapi-cli==0.0.7",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "httptools==0.6.4",
    "httpx==0.28.1",
    "idna==3.10",
    "jinja2==3.1.6",
    "jiter==0.10.0",
    "lxml==5.4.0",
    "mako==1.3.10",
    "markdown-it-py==3.0.0",
    "markupsafe==3.0.2",
    "mdurl==0.1.2",
    "more-itertools==10.7.0",
    "openai==1.88.0",
    "passlib==1.7.4",
    "premailer==3.10.0",
    "psycopg==3.2.9",
    "psycopg-binary==3.2.9",
    "pydantic==2.11.7",
    "pydantic-core==2.33.2",
    "pydantic-settings==2.9.1",
    "pydub==0.25.1",
    "httpx>=0.24.0",
    "pygments==2.19.1",
    "pyjwt==2.10.1",
    "python-dateutil==2.9.0.post0",
    "python-dotenv==1.1.0",
    "python-multipart==0.0.20",
    "telethon>=1.34.0",
    "pyyaml==6.0.2",
    "requests==2.32.4",
    "rich==14.0.0",
    "rich-toolkit==0.14.7",
    "sentry-sdk==1.45.1",
    "shellingham==1.5.4",
    "six==1.17.0",
    "sniffio==1.3.1",
    "sqlalchemy==2.0.41",
    "sqlmodel==0.0.24",
    "starlette==0.46.2",
    "tenacity==8.5.0",
    "tqdm==4.67.1",
    "typer==0.16.0",
    "typing-extensions==4.14.0",
    "typing-inspection==0.4.1",
    "urllib3==2.5.0",
    "uvicorn==0.34.3",
    "uvloop==0.21.0",
    "watchfiles==1.1.0",
    "websockets==15.0.1",
]

[tool.uv]
dev-dependencies = [
    "pytest<8.0.0,>=7.4.3",
    "mypy<2.0.0,>=1.8.0",
    "ruff<1.0.0,>=0.2.2",
    "pre-commit<4.0.0,>=3.6.2",
    "types-passlib<2.0.0.0,>=1.7.7.20240106",
    "coverage<8.0.0,>=7.4.3",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
